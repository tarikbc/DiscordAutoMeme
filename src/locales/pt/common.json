{
  "app": {
    "name": "Discord Auto Meme",
    "started": "Aplicação iniciada com sucesso.",
    "stopping": "Encerrando aplicação...",
    "stopped": "Aplicação foi encerrada.",
    "pressCtrlC": "Pressione Ctrl+C para parar a aplicação.",
    "uncaughtException": "Um erro inesperado ocorreu na aplicação."
  },
  "config": {
    "memeCountConfig": "Enviará {{count}} memes a cada {{minutes}} minutos.",
    "memeSendingEnabled": "Envio de memes está ativado.",
    "memeSendingDisabled": "Envio de memes está desativado (modo de teste).",
    "targetingSpecificUser": "Focando no usuário específico: {{userId}}",
    "targetingSpecificUsers": "Focando em {{count}} usuários específicos: {{userIds}}",
    "targetingAllFriends": "Focando em todos os amigos.",
    "missingEnvVars": "Variáveis de ambiente ausentes: {{variables}}",
    "createEnvFile": "Por favor, crie um arquivo .env com as variáveis necessárias.",
    "startingMemeService": "Iniciando serviço de memes. Verificará a cada {{minutes}} minutos.",
    "languageNotAvailable": "Idioma {{language}} não disponível. Usando inglês como padrão.",
    "languageSelected": "Idioma selecionado: {{language}}"
  },
  "logging": {
    "info": "INFO",
    "error": "ERRO",
    "warn": "AVISO",
    "debug": "DEBUG"
  },
  "errors": {
    "discordLoginFailed": "Falha no login do Discord.",
    "checkingFriendsError": "Erro ao verificar amigos jogando: {{error}}",
    "processingFriendError": "Erro ao processar amigo {{friendId}}: {{error}}",
    "checkingStatusError": "Erro ao verificar status do usuário {{userId}}: {{error}}",
    "checkingFriendsStatusError": "Erro ao verificar status dos amigos: {{error}}"
  },
  "debug": {
    "presenceUpdateTriggered": "Evento de atualização de presença acionado.",
    "checkingAllFriends": "Verificando status de todos os amigos ativamente.",
    "friendCacheCount": "Encontrados {{count}} amigos no cache de relacionamentos.",
    "checkingUserStatus": "Verificando status do usuário {{username}} ({{userId}}).",
    "nullPresence": "Presença nula recebida em handlePresenceUpdate.",
    "noUserProperty": "Presença para usuário {{userId}} não tem propriedade user.",
    "noActivities": "Usuário {{username}} não tem atividades.",
    "hasPresenceData": "Usuário {{username}} tem dados de presença diretamente no objeto do usuário.",
    "notAFriend": "Usuário {{username}} não é um amigo, ignorando atualização de presença.",
    "checkingSharedGuilds": "Sem presença direta para {{username}}, verificando servidores compartilhados.",
    "foundSharedGuilds": "Encontrados {{count}} servidores compartilhados com {{username}}.",
    "foundPresenceInGuild": "Encontrada presença para {{username}} no servidor {{guildName}} {{cacheType}}.",
    "fetchingMember": "Tentando buscar dados de membro para {{username}} no servidor {{guildName}}.",
    "fetchedPresence": "Presença buscada com sucesso para {{username}} no servidor {{guildName}}.",
    "failedFetchMember": "Não foi possível buscar membro para {{username}} no servidor {{guildName}}.",
    "noPresenceData": "Não foi possível encontrar dados de presença para {{username}} ({{userId}}).",
    "notAFriendSkipping": "Usuário {{username}} ({{userId}}) não é um amigo, pulando.",
    "userActivities": "Usuário {{username}} tem {{count}} atividades: {{activities}}.",
    "checkingTargetUsers": "Verificando {{count}} usuários alvo."
  },
  "alreadyRunning": "Serviço já está em execução.",
  "notRunning": "Serviço não está em execução.",
  "started": "Serviço iniciado.",
  "stopping": "Serviço está sendo encerrado.",
  "stopped": "Serviço encerrado.",
  "testMode": {
    "wouldHaveSent": "[MODO DE TESTE] Teria enviado {{count}} memes para {{username}} sobre {{gameName}}.",
    "wouldHaveSentForArtist": "[MODO DE TESTE] Teria enviado {{count}} memes para {{username}} sobre o artista {{artistName}}.",
    "memeUrls": "[MODO DE TESTE] URLs dos memes: {{urls}}..."
  },
  "unknownSong": "uma música",
  "unknownPlayer": "um player de música"
}
